@{
    ViewData["Title"] = Model.Title;
}

@using Worktop.WebApp.ViewModels.Components
@model Worktop.WebApp.ViewModels.ProfileViewModel

<h3>User profile</h3>

<div class="container">
    <dl class="d-flex flex-row justify-content-between flex-wrap border rounded p-2 mb-3 text-center">
        <div class="col">
            <dt>UserName</dt>
            <dd>@Model.UserName</dd>
        </div>

        <div class="col">
            <dt>Email address</dt>
            <dd>@Model.Email</dd>
        </div>

        @if (!string.IsNullOrEmpty(Model.JobTitle))
        {
            <div class="col">
                <dt>Job title</dt>
                <dd>@Model.JobTitle</dd>
            </div>

            <div class="col">
                <dt>Total salary</dt>
                <dd>@Math.Round(Model.TotalSalary, 2) $</dd>
            </div>

            <div class="col">
                <dt>Salary bonus</dt>
                <dd>x @Model.SalaryBonus</dd>
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.PhoneNumber))
        {
            <div class="col">
                <dt>Phone number</dt>
                <dd>@Model.PhoneNumber</dd>
            </div>
        }

        @if (Model.DateHired != null)
        {
            <div class="col">
                <dt>Date hired</dt>
                <dd>@Model.DateHired.Value.ToShortDateString()</dd>
            </div>
        }
    </dl>

    @await Component.InvokeAsync("ChangeEmail", new { viewModel = new ChangeEmailCallbackViewModel().WithError() })
    @await Component.InvokeAsync("ChangePassword", new {viewModel = new ChangePasswordViewModel() })
    @await Component.InvokeAsync("ChangePhoneNumber", new {viewModel = new ChangePhoneNumberViewModel() })
</div>

<partial name="_AlertPartial" model="@Model.Alert" />