@{
    ViewData["Title"] = Model.Title;
}

@model PanelViewModel

<h3 class="mb-3">Workers - @Model.Workers?.TotalCount</h3>

<form asp-action="FilterWorkers" class="d-flex flex-row justify-content-around mb-2" method="POST">
    <div class="form-group m-2">
        <label asp-for=@Model.UserName></label>
        <input class="form-control" type="search" asp-for=@Model.UserName placeholder="Find by username..." />
    </div>
    <div class="form-group m-2">
        <label asp-for=@Model.Email>Email address</label>
        <input class="form-control" type="email" asp-for=@Model.Email placeholder="Find by email address..." />
    </div>
    <div class="form-group m-2">
        <label asp-for=@Model.SortType>Sort type</label>
        <select class="form-control" asp-for=@Model.SortType>
            <option value="0">None</option>
            <option value="1">Salary ascending</option>
            <option value="2">Salary descending</option>
            <option value="3">Date hired ascending</option>
            <option value="4">Date hired descending</option>
        </select>
    </div>
    <div class="form-group m-2">
        <label asp-for=@Model.IsAdmin>Only admins</label>
        <input type="checkbox" asp-for=@Model.IsAdmin />
    </div>
    <div class="align-self-center m-2">
        <button type="submit" class="btn btn-secondary align-self-center m-1">Filter</button>
        <a asp-action="Index" class="btn btn-danger align-self-center m-1">Clear</a>
    </div>
</form>

@if (Model.Workers.Any())
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr class="text-center">
                    <th scope="col">ID</th>
                    <th scope="col">UserName</th>
                    <th scope="col">Email address</th>
                    <th scope="col">Phone number</th>
                    <th scope="col">Job title</th>
                    <th scope="col">Base salary [$]</th>
                    <th scope="col">Salary bonus</th>
                    <th scope="col">Total salary [$]</th>
                    <th scope="col">Roles</th>
                    <th scope="col">Date hired</th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var worker in Model.Workers)
                {
                    <tr>
                        <th>@worker.Id</th>
                        <td>@worker.UserName</td>
                        <td>@worker.Email</td>
                        <td>@worker.PhoneNumber</td>
                        <td>@worker.Job?.Title</td>
                        <td>@(worker.Job != null ? Math.Round(worker.Job.Salary, 2) : 0)</td>
                        <td>x @worker.SalaryBonus</td>
                        <td>@(worker.Job != null ? Math.Round(worker.Job.Salary * (decimal)worker.SalaryBonus, 2) : 0)</td>
                        <td>@(string.Join(" | ", worker.UserRoles.Select(ur => ur.Role.Name)))</td>
                        <td>@(worker.DateHired.Value.ToShortDateString())</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@worker.Id" class="btn btn-secondary">Details</a>
                        </td>
                        <td>
                            <form asp-action="DeleteWorker" asp-controller="Panel" asp-route-workerId=@worker.Id method="POST">
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <h4 class="empty-list-text">Any workers found...</h4>
}

<form method="POST" class="d-flex flex-row justify-content-end">
    <input type="hidden" asp-for=@Model.UserName />
    <input type="hidden" asp-for=@Model.Email />
    <input type="hidden" asp-for=@Model.SortType />
    <input type="hidden" asp-for=@Model.IsAdmin />

    <partial name="_PaginationPartial" model=@(PaginationViewModel.Build<User>(Model.Workers, "FilterWorkers")) />
</form>