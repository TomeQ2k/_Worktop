@{
    ViewData["Title"]=Model.Title;
}

@model RoomViewModel

<section class="d-flex flex-row justify-content-around">
    <h3 class="mb-3 text-center">Chat room - <strong>@Model.Room.RoomName</strong></h3>
    <form asp-action="LeaveRoom" asp-route-roomId=@Model.Room.Id>
        <button type="submit" class="btn btn-danger float-right h-80">Leave</button>
    </form>
</section>
<section class="container col-sm-12 d-flex flex-column justify-content-center align-items-center">
    <section id="chat" class="container">
        @foreach (var message in Model.Room.Messages)
        {
            <partial name="_MessageCard" model="@MessageCardViewModel.Build(message)" />
        }
    </section>

    @await Component.InvokeAsync("MessageForm", new {message = Model.Message})

</section>
    <script>
        const currentUserName = "@ViewBag.CurrentUserName"
        const currentRoomId = "@ViewBag.RoomId";
        const currentUserId = @Context.GetCurrentUserId();
    </script>

@section scripts {
    <script src="~/lib/signalr/signalr.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/js/message.js"></script>
    <script src="~/js/signalrConstants.js"></script>
    <script src="~/js/scroll.js"></script>
    <script src="~/js/chat.js"></script>
    <script src="~/js/signalrRoomsHandler.js"></script>
}